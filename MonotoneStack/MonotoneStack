使用场景：通常是一维数组 要寻找任一个元素的右边或者左边第一个比自己大或者小的元素的位置 --->单调栈  时间复杂度为O(n)。
使用说明：
1.存放的元素是下标i，T[i]就可以获取对应元素
2.单调顺序(从栈顶到栈底)：  如果求一个元素右边第一个更大元素，单调栈就是递增的
            （为了进栈满足递增顺序 当遍历元素大于/或等于栈顶时，栈顶元素弹出）
            如果求一个元素右边第一个更小元素，单调栈就是递减的。
            （为了进栈满足递减顺序 当遍历元素小于于/或等于栈顶时，栈顶元素弹出）
3.处理遍历元素：以求一个元素右边第一个更大元素为例
情况一：当前遍历的元素T[i]小于栈顶元素T[st.top()]的情况，直接入栈
情况二：当前遍历的元素T[i]等于栈顶元素T[st.top()]的情况，入栈(看求的是>/>=)
情况三：当前遍历的元素T[i]大于栈顶元素T[st.top()]的情况，出栈计算，然后T[i]入栈